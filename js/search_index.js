var search_data = {"index":{"searchIndex":["atable","ambiguous","btable","capybara","child","composite","container","cucumber","ast","dill","autotable","row","basetable","checkbox","checkpoint","conditionnotmet","timer","frozen","constructors","conversions","dsl","document","field","fieldgroup","form","instanceconversions","list","listitem","missing","select","table","columndefinition","textfield","texttable","celltext","mapping","transformations","voidmapping","widget","missingselector","removed","widgetclass","widgetname","widgetparts","container","struct","classmethods","dillapp","fieldgroup","lazy","link","list","listitem","missing","mywidget","object","parent","simplest","str","table","top","widget","widgetns","inner","widgetspecdsl","array()","boolean()","decimal()","givenaction()","givenhtml()","givenwidget()","hash()","integer()","list()","string()","timeish()","widget()","absent?()","action()","attribute()","boolean()","call()","check_box()","click()","click()","column()","column_definitions()","count()","date()","default_locator()","diff()","document()","each()","elapsed()","elapsed()","empty?()","ensure_loaded()","ensure_table_loaded()","ensure_table_loaded()","eventually()","exclude?()","expired?()","field()","field_names()","fields()","find_in()","find_in()","float()","footers()","frozen?()","get()","get()","get()","gone?()","has_action?()","has_no_widget?()","has_widget?()","has_widget?()","hurray!()","include?()","included()","included()","inline!()","inspect()","integer()","item()","item_factory()","item_for()","item_selector()","items()","keyword()","length()","list()","map()","mappings()","name()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","now()","pass()","present?()","present_in?()","present_in?()","rescuable_errors()","root()","root()","root()","rows()","select()","selector()","selector()","selector()","selector()","set()","set()","set()","set()","set()","single_row()","size()","skip()","start()","string()","submit_with()","text()","text_field()","tick()","tick_duration()","time()","to_a()","to_a()","to_boolean()","to_cell()","to_cell()","to_cell()","to_cell()","to_class()","to_h()","to_row()","to_row()","to_s()","to_s()","to_sym()","to_table()","to_table()","to_table()","to_table()","to_time()","value()","value()","value()","value()","values()","values()","wait_for()","widget()","widget()","widget()","widget_delegator()","widget_lookup_scope()","yay!()","gemfile","gemfile.lock","license","readme","rakefile","dill.gemspec","action_macro.feature","document.feature","dsl.feature","sub_widgets.feature","widget.feature"],"longSearchIndex":["atable","ambiguous","btable","capybara","child","composite","container","cucumber","cucumber::ast","dill","dill::autotable","dill::autotable::row","dill::basetable","dill::checkbox","dill::checkpoint","dill::checkpoint::conditionnotmet","dill::checkpoint::timer","dill::checkpoint::timer::frozen","dill::constructors","dill::conversions","dill::dsl","dill::document","dill::field","dill::fieldgroup","dill::form","dill::instanceconversions","dill::list","dill::listitem","dill::missing","dill::select","dill::table","dill::table::columndefinition","dill::textfield","dill::texttable","dill::texttable::celltext","dill::texttable::mapping","dill::texttable::transformations","dill::texttable::voidmapping","dill::widget","dill::widget::missingselector","dill::widget::removed","dill::widgetclass","dill::widgetname","dill::widgetparts","dill::widgetparts::container","dill::widgetparts::struct","dill::widgetparts::struct::classmethods","dillapp","fieldgroup","lazy","link","list","listitem","missing","mywidget","object","parent","simplest","str","table","top","widget","widgetns","widgetns::inner","widgetspecdsl","dill::texttable#array()","dill::conversions#boolean()","dill::constructors#decimal()","widgetspecdsl#givenaction()","widgetspecdsl#givenhtml()","widgetspecdsl#givenwidget()","dill::texttable#hash()","dill::constructors#integer()","dill::conversions#list()","dill::constructors#string()","dill::conversions#timeish()","dill::constructors#widget()","dill::widget#absent?()","dill::widget::action()","dill::widgetparts::struct::classmethods#attribute()","dill::widgetparts::struct::classmethods#boolean()","dill::checkpoint#call()","dill::fieldgroup::check_box()","dill::dsl#click()","dill::widget#click()","dill::table::column()","dill::table::column_definitions()","dill::list#count()","dill::widgetparts::struct::classmethods#date()","dill::fieldgroup::default_locator()","dill::widget#diff()","dill::dsl#document()","dill::texttable#each()","dill::checkpoint::timer#elapsed()","object#elapsed()","dill::list#empty?()","dill::table::columndefinition#ensure_loaded()","dill::autotable#ensure_table_loaded()","dill::table#ensure_table_loaded()","dill::dsl#eventually()","dill::list#exclude?()","dill::checkpoint::timer#expired?()","dill::fieldgroup::field()","dill::fieldgroup::field_names()","dill::fieldgroup#fields()","dill::field::find_in()","dill::widget::find_in()","dill::widgetparts::struct::classmethods#float()","dill::autotable#footers()","dill::checkpoint::timer#frozen?()","dill::checkbox#get()","dill::field#get()","dill::select#get()","dill::widget#gone?()","dill::widget#has_action?()","dill::widgetparts::container#has_no_widget?()","dill::dsl#has_widget?()","dill::widgetparts::container#has_widget?()","list#hurray!()","dill::list#include?()","dill::instanceconversions::included()","dill::widgetparts::struct::included()","mywidget#inline!()","dill::widget#inspect()","dill::widgetparts::struct::classmethods#integer()","dill::list#item()","dill::list#item_factory()","dill::list#item_for()","dill::list#item_selector()","dill::list#items()","dill::texttable::transformations::keyword()","dill::list#length()","dill::widgetparts::struct::classmethods#list()","dill::texttable#map()","dill::texttable#mappings()","mywidget::name()","dill::autotable::row::new()","dill::checkpoint::new()","dill::checkpoint::timer::new()","dill::document::new()","dill::table::columndefinition::new()","dill::texttable::new()","dill::texttable::mapping::new()","dill::widget::new()","dill::widgetclass::new()","dill::widgetname::new()","dill::checkpoint::timer#now()","dill::texttable::transformations::pass()","dill::widget#present?()","dill::field::present_in?()","dill::widget::present_in?()","dill::checkpoint#rescuable_errors()","dill::document#root()","dill::widget#root()","dill::widget::root()","dill::texttable#rows()","dill::fieldgroup::select()","child::selector()","dill::list#selector()","dill::widget::selector()","widget::selector()","dill::field#set()","dill::fieldgroup#set()","dill::select#set()","dill::texttable::mapping#set()","dill::texttable::voidmapping#set()","dill::texttable#single_row()","dill::list#size()","dill::texttable#skip()","dill::checkpoint::timer#start()","dill::widgetparts::struct::classmethods#string()","dill::form#submit_with()","dill::widget#text()","dill::fieldgroup::text_field()","dill::checkpoint::timer#tick()","dill::checkpoint::timer#tick_duration()","dill::widgetparts::struct::classmethods#time()","dill::instanceconversions#to_a()","dill::texttable#to_a()","dill::instanceconversions#to_boolean()","dill::checkbox#to_cell()","dill::select#to_cell()","dill::textfield#to_cell()","dill::widget#to_cell()","dill::widgetname#to_class()","dill::texttable#to_h()","dill::list#to_row()","dill::listitem#to_row()","dill::checkbox#to_s()","dill::widget#to_s()","dill::widgetname#to_sym()","dill::basetable#to_table()","dill::fieldgroup#to_table()","dill::form#to_table()","dill::list#to_table()","dill::instanceconversions#to_time()","dill::constructors#value()","dill::dsl#value()","dill::list#value()","dill::widget#value()","dill::autotable::row#values()","dill::table::columndefinition#values()","dill::checkpoint::wait_for()","dill::dsl#widget()","dill::widget::widget()","dill::widgetparts::container#widget()","dill::widget::widget_delegator()","dill::dsl#widget_lookup_scope()","object#yay!()","","","","","","","","","","",""],"info":[["ATable","","classes/ATable.html","",""],["Ambiguous","","classes/Ambiguous.html","",""],["BTable","","classes/BTable.html","",""],["Capybara","","classes/Capybara.html","",""],["Child","","classes/Child.html","",""],["Composite","","classes/Composite.html","",""],["Container","","classes/Container.html","",""],["Cucumber","","classes/Cucumber.html","",""],["Cucumber::Ast","","classes/Cucumber/Ast.html","",""],["Dill","","classes/Dill.html","","<p>This file describes the organization of the major Widget API components.\n<p>Parts\n<p>Widget parts encapsulate …\n"],["Dill::AutoTable","","classes/Dill/AutoTable.html","",""],["Dill::AutoTable::Row","","classes/Dill/AutoTable/Row.html","",""],["Dill::BaseTable","","classes/Dill/BaseTable.html","",""],["Dill::CheckBox","","classes/Dill/CheckBox.html","","<p>A check box.\n"],["Dill::Checkpoint","","classes/Dill/Checkpoint.html","","<p>A point in time where some condition, or some set of conditions, should be\nverified.\n<p>@see\nrubydoc.info/github/jnicklas/capybara/master/Capybara/Node/Base#synchronize-instance_method\n…\n"],["Dill::Checkpoint::ConditionNotMet","","classes/Dill/Checkpoint/ConditionNotMet.html","",""],["Dill::Checkpoint::Timer","","classes/Dill/Checkpoint/Timer.html","",""],["Dill::Checkpoint::Timer::Frozen","","classes/Dill/Checkpoint/Timer/Frozen.html","",""],["Dill::Constructors","","classes/Dill/Constructors.html","",""],["Dill::Conversions","","classes/Dill/Conversions.html","",""],["Dill::DSL","","classes/Dill/DSL.html","",""],["Dill::Document","","classes/Dill/Document.html","",""],["Dill::Field","","classes/Dill/Field.html","","<p>A form field.\n"],["Dill::FieldGroup","","classes/Dill/FieldGroup.html","","<p>A group of form fields.\n<p>@todo Explain how to use locators when defining fields, including what\n\n<pre><code>happens ...</code></pre>\n"],["Dill::Form","","classes/Dill/Form.html","",""],["Dill::InstanceConversions","","classes/Dill/InstanceConversions.html","",""],["Dill::List","","classes/Dill/List.html","","<p>Use a List when you want to treat repeating elements as a unit.\n<p>Usage\n<p>Consider the following HTML:\n"],["Dill::ListItem","","classes/Dill/ListItem.html","",""],["Dill::Missing","","classes/Dill/Missing.html","","<p>An exception that signals that something is missing.\n"],["Dill::Select","","classes/Dill/Select.html","","<p>A select.\n"],["Dill::Table","","classes/Dill/Table.html","",""],["Dill::Table::ColumnDefinition","","classes/Dill/Table/ColumnDefinition.html","",""],["Dill::TextField","","classes/Dill/TextField.html","","<p>A text field.\n"],["Dill::TextTable","","classes/Dill/TextTable.html","",""],["Dill::TextTable::CellText","","classes/Dill/TextTable/CellText.html","",""],["Dill::TextTable::Mapping","","classes/Dill/TextTable/Mapping.html","",""],["Dill::TextTable::Transformations","","classes/Dill/TextTable/Transformations.html","",""],["Dill::TextTable::VoidMapping","","classes/Dill/TextTable/VoidMapping.html","",""],["Dill::Widget","","classes/Dill/Widget.html","",""],["Dill::Widget::MissingSelector","","classes/Dill/Widget/MissingSelector.html","",""],["Dill::Widget::Removed","","classes/Dill/Widget/Removed.html","",""],["Dill::WidgetClass","","classes/Dill/WidgetClass.html","",""],["Dill::WidgetName","","classes/Dill/WidgetName.html","","<p>The name of a widget in a format-independent representation.\n"],["Dill::WidgetParts","","classes/Dill/WidgetParts.html","",""],["Dill::WidgetParts::Container","","classes/Dill/WidgetParts/Container.html","",""],["Dill::WidgetParts::Struct","","classes/Dill/WidgetParts/Struct.html","",""],["Dill::WidgetParts::Struct::ClassMethods","","classes/Dill/WidgetParts/Struct/ClassMethods.html","",""],["DillApp","","classes/DillApp.html","",""],["FieldGroup","","classes/FieldGroup.html","",""],["Lazy","","classes/Lazy.html","",""],["Link","","classes/Link.html","",""],["List","","classes/List.html","",""],["ListItem","","classes/ListItem.html","",""],["Missing","","classes/Missing.html","",""],["MyWidget","","classes/MyWidget.html","",""],["Object","","classes/Object.html","",""],["Parent","","classes/Parent.html","",""],["Simplest","","classes/Simplest.html","",""],["Str","","classes/Str.html","",""],["Table","","classes/Table.html","",""],["Top","","classes/Top.html","",""],["Widget","","classes/Widget.html","",""],["WidgetNS","","classes/WidgetNS.html","",""],["WidgetNS::Inner","","classes/WidgetNS/Inner.html","",""],["WidgetSpecDSL","","classes/WidgetSpecDSL.html","",""],["Array","Dill::TextTable","classes/Dill/TextTable.html#method-i-Array","(table)",""],["Boolean","Dill::Conversions","classes/Dill/Conversions.html#method-i-Boolean","(val)",""],["Decimal","Dill::Constructors","classes/Dill/Constructors.html#method-i-Decimal","(*selector)",""],["GivenAction","WidgetSpecDSL","classes/WidgetSpecDSL.html#method-i-GivenAction","(body_html, path)",""],["GivenHTML","WidgetSpecDSL","classes/WidgetSpecDSL.html#method-i-GivenHTML","(body_html, path = '/test')",""],["GivenWidget","WidgetSpecDSL","classes/WidgetSpecDSL.html#method-i-GivenWidget","()",""],["Hash","Dill::TextTable","classes/Dill/TextTable.html#method-i-Hash","(table)",""],["Integer","Dill::Constructors","classes/Dill/Constructors.html#method-i-Integer","(*selector)",""],["List","Dill::Conversions","classes/Dill/Conversions.html#method-i-List","(valstr, &block)",""],["String","Dill::Constructors","classes/Dill/Constructors.html#method-i-String","(*selector, &block)",""],["Timeish","Dill::Conversions","classes/Dill/Conversions.html#method-i-Timeish","(val)",""],["Widget","Dill::Constructors","classes/Dill/Constructors.html#method-i-Widget","(*selector, &block)",""],["absent?","Dill::Widget","classes/Dill/Widget.html#method-i-absent-3F","()","<p>Alias for #gone?\n"],["action","Dill::Widget","classes/Dill/Widget.html#method-c-action","(name, selector)","<p>Defines a new action.\n<p>This is a shortcut to help defining a widget and a method that clicks on\nthat widget. …\n"],["attribute","Dill::WidgetParts::Struct::ClassMethods","classes/Dill/WidgetParts/Struct/ClassMethods.html#method-i-attribute","(name, selector, &block)",""],["boolean","Dill::WidgetParts::Struct::ClassMethods","classes/Dill/WidgetParts/Struct/ClassMethods.html#method-i-boolean","(name, selector, &block)",""],["call","Dill::Checkpoint","classes/Dill/Checkpoint.html#method-i-call","(&condition)","<p>Executes <code>block</code> repeatedly until it returns a “truthy” value or\n<code>wait_time</code> expires.\n<p>Swallows any …\n"],["check_box","Dill::FieldGroup","classes/Dill/FieldGroup.html#method-c-check_box","(name, locator = nil)","<p>Creates a new checkbox accessor.\n<p>Adds the following methods to the widget:\n<p>&lt;name&gt; &mdash; Gets the current …\n"],["click","Dill::DSL","classes/Dill/DSL.html#method-i-click","(name, *args)","<p>Clicks the widget defined by <code>name</code> and optional\n<code>args</code>.\n<p>Makes no distinction between links or buttons.\n\n<pre><code>class ...\n</code></pre>\n"],["click","Dill::Widget","classes/Dill/Widget.html#method-i-click","(*args)","<p>Clicks the current widget, or the child widget given by <code>name</code>.\n<p>Usage\n<p>Given the following widget definition: …\n"],["column","Dill::Table","classes/Dill/Table.html#method-c-column","(selector, header = nil, &transform)",""],["column_definitions","Dill::Table","classes/Dill/Table.html#method-c-column_definitions","()",""],["count","Dill::List","classes/Dill/List.html#method-i-count","()",""],["date","Dill::WidgetParts::Struct::ClassMethods","classes/Dill/WidgetParts/Struct/ClassMethods.html#method-i-date","(name, selector, &block)",""],["default_locator","Dill::FieldGroup","classes/Dill/FieldGroup.html#method-c-default_locator","(type = nil, &block)",""],["diff","Dill::Widget","classes/Dill/Widget.html#method-i-diff","(table, wait_time = Capybara.default_wait_time)","<p>Compares this widget with the given Cucumber <code>table</code>.\n<p>Example\n\n<pre><code>Then(/^some step that takes in a cucumber table$/) ...</code></pre>\n"],["document","Dill::DSL","classes/Dill/DSL.html#method-i-document","()","<p>@return [Document] the current document with the class of the\n\n<pre><code>current object set as the widget lookup ...</code></pre>\n"],["each","Dill::TextTable","classes/Dill/TextTable.html#method-i-each","(&block)",""],["elapsed","Dill::Checkpoint::Timer","classes/Dill/Checkpoint/Timer.html#method-i-elapsed","()",""],["elapsed","Object","classes/Object.html#method-i-elapsed","()",""],["empty?","Dill::List","classes/Dill/List.html#method-i-empty-3F","()","<p>TODO: Convert value to primitive data structures.\n"],["ensure_loaded","Dill::Table::ColumnDefinition","classes/Dill/Table/ColumnDefinition.html#method-i-ensure_loaded","(container)",""],["ensure_table_loaded","Dill::AutoTable","classes/Dill/AutoTable.html#method-i-ensure_table_loaded","()",""],["ensure_table_loaded","Dill::Table","classes/Dill/Table.html#method-i-ensure_table_loaded","()",""],["eventually","Dill::DSL","classes/Dill/DSL.html#method-i-eventually","(wait_time = Capybara.default_wait_time, &block)","<p>re-run one or more assertions until either they all pass, or Dill times\nout, which will result in a test …\n"],["exclude?","Dill::List","classes/Dill/List.html#method-i-exclude-3F","(element)",""],["expired?","Dill::Checkpoint::Timer","classes/Dill/Checkpoint/Timer.html#method-i-expired-3F","()",""],["field","Dill::FieldGroup","classes/Dill/FieldGroup.html#method-c-field","(name, locator, type)","<p>Defines a new field.\n<p>@param name the name of the field accessor. @param locator the field\nlocator. @param …\n"],["field_names","Dill::FieldGroup","classes/Dill/FieldGroup.html#method-c-field_names","()","<p>The names of all the fields that belong to this field group.\n<p>Field names are automatically added to this …\n"],["fields","Dill::FieldGroup","classes/Dill/FieldGroup.html#method-i-fields","()","<p>@return This field group’s field widgets.\n"],["find_in","Dill::Field","classes/Dill/Field.html#method-c-find_in","(parent)",""],["find_in","Dill::Widget","classes/Dill/Widget.html#method-c-find_in","(parent, *args)","<p>Finds a single instance of the current widget in <code>node</code>.\n<p>@param node the node we want to search in\n<p>@return …\n"],["float","Dill::WidgetParts::Struct::ClassMethods","classes/Dill/WidgetParts/Struct/ClassMethods.html#method-i-float","(name, selector, &block)",""],["footers","Dill::AutoTable","classes/Dill/AutoTable.html#method-i-footers","()","<p>don’t include footer in to_table, because footer column configuration is\nvery often different from the …\n"],["frozen?","Dill::Checkpoint::Timer","classes/Dill/Checkpoint/Timer.html#method-i-frozen-3F","()",""],["get","Dill::CheckBox","classes/Dill/CheckBox.html#method-i-get","()","<p>@return [Boolean] <code>true</code> if the checkbox is checked,\n<code>false</code>\n\n<pre><code>otherwise.</code></pre>\n"],["get","Dill::Field","classes/Dill/Field.html#method-i-get","()","<p>@return This field’s value.\n<p>Override this to get the actual value.\n"],["get","Dill::Select","classes/Dill/Select.html#method-i-get","()","<p>@return [String] The text of the selected option.\n"],["gone?","Dill::Widget","classes/Dill/Widget.html#method-i-gone-3F","()","<p>Returns <code>true</code> if the widget is not visible, or has been removed\nfrom the DOM.\n"],["has_action?","Dill::Widget","classes/Dill/Widget.html#method-i-has_action-3F","(name)","<p>Determines if the widget underlying an action exists.\n<p>@param name the name of the action\n<p>@raise Missing …\n"],["has_no_widget?","Dill::WidgetParts::Container","classes/Dill/WidgetParts/Container.html#method-i-has_no_widget-3F","(name)",""],["has_widget?","Dill::DSL","classes/Dill/DSL.html#method-i-has_widget-3F","(name, *args)","<p>@return [Boolean] Whether one or more widgets exist in the current\n\n<pre><code>document.</code></pre>\n"],["has_widget?","Dill::WidgetParts::Container","classes/Dill/WidgetParts/Container.html#method-i-has_widget-3F","(name, *args)",""],["hurray!","List","classes/List.html#method-i-hurray-21","()",""],["include?","Dill::List","classes/Dill/List.html#method-i-include-3F","(element)",""],["included","Dill::InstanceConversions","classes/Dill/InstanceConversions.html#method-c-included","(base)",""],["included","Dill::WidgetParts::Struct","classes/Dill/WidgetParts/Struct.html#method-c-included","(target)",""],["inline!","MyWidget","classes/MyWidget.html#method-i-inline-21","()",""],["inspect","Dill::Widget","classes/Dill/Widget.html#method-i-inspect","()",""],["integer","Dill::WidgetParts::Struct::ClassMethods","classes/Dill/WidgetParts/Struct/ClassMethods.html#method-i-integer","(name, selector, &block)",""],["item","Dill::List","classes/Dill/List.html#method-i-item","(selector, type = ListItem, &block)","<p>Configures the List item selector and class.\n<p>Usage\n<p>Given the following HTML:\n"],["item_factory","Dill::List","classes/Dill/List.html#method-i-item_factory","()",""],["item_for","Dill::List","classes/Dill/List.html#method-i-item_for","(node)",""],["item_selector","Dill::List","classes/Dill/List.html#method-i-item_selector","()",""],["items","Dill::List","classes/Dill/List.html#method-i-items","()",""],["keyword","Dill::TextTable::Transformations","classes/Dill/TextTable/Transformations.html#method-c-keyword","()",""],["length","Dill::List","classes/Dill/List.html#method-i-length","()",""],["list","Dill::WidgetParts::Struct::ClassMethods","classes/Dill/WidgetParts/Struct/ClassMethods.html#method-i-list","(name, selector, options = {}, &block)",""],["map","Dill::TextTable","classes/Dill/TextTable.html#method-i-map","(name, options = {}, &block)",""],["mappings","Dill::TextTable","classes/Dill/TextTable.html#method-i-mappings","()",""],["name","MyWidget","classes/MyWidget.html#method-c-name","()",""],["new","Dill::AutoTable::Row","classes/Dill/AutoTable/Row.html#method-c-new","(settings)",""],["new","Dill::Checkpoint","classes/Dill/Checkpoint.html#method-c-new","(wait_time = Capybara.default_wait_time)","<p>Initializes a new Checkpoint.\n<p>@param wait_time how long this checkpoint will wait for its conditions to …\n"],["new","Dill::Checkpoint::Timer","classes/Dill/Checkpoint/Timer.html#method-c-new","(duration)",""],["new","Dill::Document","classes/Dill/Document.html#method-c-new","(widget_lookup_scope)",""],["new","Dill::Table::ColumnDefinition","classes/Dill/Table/ColumnDefinition.html#method-c-new","(selector, header, transform)",""],["new","Dill::TextTable","classes/Dill/TextTable.html#method-c-new","(table)",""],["new","Dill::TextTable::Mapping","classes/Dill/TextTable/Mapping.html#method-c-new","(settings = {})",""],["new","Dill::Widget","classes/Dill/Widget.html#method-c-new","(node = nil, &query)",""],["new","Dill::WidgetClass","classes/Dill/WidgetClass.html#method-c-new","(selector, parent = Widget, &extensions)",""],["new","Dill::WidgetName","classes/Dill/WidgetName.html#method-c-new","(name)","<p>Constructs the widget name.\n<p>@param name [String, Symbol] the name of the widget in primitive form\n"],["now","Dill::Checkpoint::Timer","classes/Dill/Checkpoint/Timer.html#method-i-now","()",""],["pass","Dill::TextTable::Transformations","classes/Dill/TextTable/Transformations.html#method-c-pass","()",""],["present?","Dill::Widget","classes/Dill/Widget.html#method-i-present-3F","()","<p>Returns <code>true</code> if widget is visible.\n"],["present_in?","Dill::Field","classes/Dill/Field.html#method-c-present_in-3F","(parent)",""],["present_in?","Dill::Widget","classes/Dill/Widget.html#method-c-present_in-3F","(parent)","<p>Determines if an instance of this widget class exists in\n<code>parent_node</code>.\n<p>@param parent_node [Capybara::Node] …\n"],["rescuable_errors","Dill::Checkpoint","classes/Dill/Checkpoint.html#method-i-rescuable_errors","()",""],["root","Dill::Document","classes/Dill/Document.html#method-i-root","()",""],["root","Dill::Widget","classes/Dill/Widget.html#method-i-root","()",""],["root","Dill::Widget","classes/Dill/Widget.html#method-c-root","(*selector, &block)","<p>Sets this widget’s default selector.\n<p>You can pass more than one argument to it, or a single Array. Any …\n"],["rows","Dill::TextTable","classes/Dill/TextTable.html#method-i-rows","()",""],["select","Dill::FieldGroup","classes/Dill/FieldGroup.html#method-c-select","(name, locator = nil)","<p>Creates a new select accessor.\n<p>Adds the following methods to the widget:\n<p>&lt;name&gt; &mdash; Gets the current …\n"],["selector","Child","classes/Child.html#method-c-selector","()",""],["selector","Dill::List","classes/Dill/List.html#method-i-selector","()",""],["selector","Dill::Widget","classes/Dill/Widget.html#method-c-selector","(*args)","<p>Returns the selector specified with <code>root</code>.\n"],["selector","Widget","classes/Widget.html#method-c-selector","()",""],["set","Dill::Field","classes/Dill/Field.html#method-i-set","(value)","<p>Sets the field value.\n<p>Override this to set the value.\n"],["set","Dill::FieldGroup","classes/Dill/FieldGroup.html#method-i-set","(attributes)","<p>Sets the given form attributes.\n<p>@param attributes [Hash] the attributes and values we want to set.\n<p>@return …\n"],["set","Dill::Select","classes/Dill/Select.html#method-i-set","(option)","<p>Selects the given <code>option</code>.\n<p>You may pass in the option text or value.\n"],["set","Dill::TextTable::Mapping","classes/Dill/TextTable/Mapping.html#method-i-set","(instance, row, key, value)",""],["set","Dill::TextTable::VoidMapping","classes/Dill/TextTable/VoidMapping.html#method-i-set","(*)",""],["single_row","Dill::TextTable","classes/Dill/TextTable.html#method-i-single_row","()",""],["size","Dill::List","classes/Dill/List.html#method-i-size","()",""],["skip","Dill::TextTable","classes/Dill/TextTable.html#method-i-skip","(name)",""],["start","Dill::Checkpoint::Timer","classes/Dill/Checkpoint/Timer.html#method-i-start","()",""],["string","Dill::WidgetParts::Struct::ClassMethods","classes/Dill/WidgetParts/Struct/ClassMethods.html#method-i-string","(name, *args, &block)",""],["submit_with","Dill::Form","classes/Dill/Form.html#method-i-submit_with","(attributes)","<p>Submit form with <code>attributes</code>.\n<p>@param attributes [Hash] the form fields and their values\n<p>@return the current …\n"],["text","Dill::Widget","classes/Dill/Widget.html#method-i-text","()",""],["text_field","Dill::FieldGroup","classes/Dill/FieldGroup.html#method-c-text_field","(name, locator = nil)","<p>Creates a new text field accessor.\n<p>Adds the following methods to the widget:\n<p>&lt;name&gt; &mdash; Returns the current …\n"],["tick","Dill::Checkpoint::Timer","classes/Dill/Checkpoint/Timer.html#method-i-tick","()",""],["tick_duration","Dill::Checkpoint::Timer","classes/Dill/Checkpoint/Timer.html#method-i-tick_duration","()",""],["time","Dill::WidgetParts::Struct::ClassMethods","classes/Dill/WidgetParts/Struct/ClassMethods.html#method-i-time","(name, *args, &block)",""],["to_a","Dill::InstanceConversions","classes/Dill/InstanceConversions.html#method-i-to_a","()",""],["to_a","Dill::TextTable","classes/Dill/TextTable.html#method-i-to_a","()",""],["to_boolean","Dill::InstanceConversions","classes/Dill/InstanceConversions.html#method-i-to_boolean","()",""],["to_cell","Dill::CheckBox","classes/Dill/CheckBox.html#method-i-to_cell","()",""],["to_cell","Dill::Select","classes/Dill/Select.html#method-i-to_cell","()",""],["to_cell","Dill::TextField","classes/Dill/TextField.html#method-i-to_cell","()",""],["to_cell","Dill::Widget","classes/Dill/Widget.html#method-i-to_cell","()","<p>Converts this widget into a string representation suitable to be displayed\nin a Cucumber table cell. …\n"],["to_class","Dill::WidgetName","classes/Dill/WidgetName.html#method-i-to_class","(scope = Object)","<p>Returns the class for this widget name, in the given scope.\n"],["to_h","Dill::TextTable","classes/Dill/TextTable.html#method-i-to_h","()",""],["to_row","Dill::List","classes/Dill/List.html#method-i-to_row","()",""],["to_row","Dill::ListItem","classes/Dill/ListItem.html#method-i-to_row","()","<p>Returns this ListItem’s contents formatted as a row, for comparison with a\nCucumber::Ast::Table. By default, …\n"],["to_s","Dill::CheckBox","classes/Dill/CheckBox.html#method-i-to_s","()","<p>@return +“yes”+ if the checkbox is checked, +“no”+ otherwise.\n"],["to_s","Dill::Widget","classes/Dill/Widget.html#method-i-to_s","()",""],["to_sym","Dill::WidgetName","classes/Dill/WidgetName.html#method-i-to_sym","()",""],["to_table","Dill::BaseTable","classes/Dill/BaseTable.html#method-i-to_table","()",""],["to_table","Dill::FieldGroup","classes/Dill/FieldGroup.html#method-i-to_table","()","<p>Converts the current field group into a table suitable for diff’ing with\nCucumber::Ast::Table.\n<p>Field labels …\n"],["to_table","Dill::Form","classes/Dill/Form.html#method-i-to_table","()",""],["to_table","Dill::List","classes/Dill/List.html#method-i-to_table","()",""],["to_time","Dill::InstanceConversions","classes/Dill/InstanceConversions.html#method-i-to_time","()",""],["value","Dill::Constructors","classes/Dill/Constructors.html#method-i-value","()",""],["value","Dill::DSL","classes/Dill/DSL.html#method-i-value","(name, *args)",""],["value","Dill::List","classes/Dill/List.html#method-i-value","()",""],["value","Dill::Widget","classes/Dill/Widget.html#method-i-value","()",""],["values","Dill::AutoTable::Row","classes/Dill/AutoTable/Row.html#method-i-values","()",""],["values","Dill::Table::ColumnDefinition","classes/Dill/Table/ColumnDefinition.html#method-i-values","(container)",""],["wait_for","Dill::Checkpoint","classes/Dill/Checkpoint.html#method-c-wait_for","(wait_time = Capybara.default_wait_time, &block)","<p>Shortcut for instance level wait_for.\n"],["widget","Dill::DSL","classes/Dill/DSL.html#method-i-widget","(name, *args)","<p>Returns a widget instance for the given name.\n<p>@param name [String, Symbol]\n"],["widget","Dill::Widget","classes/Dill/Widget.html#method-c-widget","(name, *rest, &block)","<p>Declares a new child widget.\n<p>Child widgets are accessible inside the container widget using the\n{#widget} …\n"],["widget","Dill::WidgetParts::Container","classes/Dill/WidgetParts/Container.html#method-i-widget","(name, *args)",""],["widget_delegator","Dill::Widget","classes/Dill/Widget.html#method-c-widget_delegator","(name, widget_message, method_name = nil)","<p>Creates a delegator for one child widget message.\n<p>Since widgets are accessed through {WidgetParts::Container#widget}, …\n"],["widget_lookup_scope","Dill::DSL","classes/Dill/DSL.html#method-i-widget_lookup_scope","()",""],["yay!","Object","classes/Object.html#method-i-yay-21","()",""],["Gemfile","","files/Gemfile.html","","<p>source “rubygems.org”\n<p>gemspec\n"],["Gemfile.lock","","files/Gemfile_lock.html","","<p>PATH\n\n<pre><code>remote: .\nspecs:\n  dill (0.6.0)\n    capybara (&gt;= 2.0)\n    chronic</code></pre>\n<p>GEM\n"],["LICENSE","","files/LICENSE.html","","<p>MIT LICENSE\n<p>Copyright © MojoTech\n<p>Permission is hereby granted, free of charge, to any person obtaining …\n"],["README","","files/README_md.html","","<p>Dill\n<p>Write tastier tests.\n<p>Installation\n"],["Rakefile","","files/Rakefile.html","","<p>gem ‘rdoc’ require ‘rdoc/rdoc’\n<p>options = RDoc::Options.new # see RDoc::Options\n<p>rdoc = RDoc::RDoc.new rdoc.document …\n"],["dill.gemspec","","files/dill_gemspec.html","","<p>$:.unshift File.expand_path(‘../lib’, __FILE__) require ‘dill/version’\n<p>Gem::Specification.new do |s|\n\n<pre><code>s.name ...</code></pre>\n"],["action_macro.feature","","files/features/widgets/action_macro_feature.html","","<p>Feature: “action” macro\n\n<pre><code>Widget actions are declared using the `action` macro.\n\n  action &lt;name&gt;, ...</code></pre>\n"],["document.feature","","files/features/widgets/document_feature.html","","<p>Feature: Document\n\n<pre><code>The `document` is exposed by default to cucumber steps. You can use it as a\nmore readable ...</code></pre>\n"],["dsl.feature","","files/features/widgets/dsl_feature.html","","<p>Feature: DSL\n\n<pre><code>The Dill Widget DSL exposes a few methods to make it easier for you to work\nwith widgets. ...</code></pre>\n"],["sub_widgets.feature","","files/features/widgets/sub_widgets_feature.html","","<p>Feature: Sub-widgets\n\n<pre><code>You declare sub-widgets by declaring inner widget classes. The inner class's\nroot ...</code></pre>\n"],["widget.feature","","files/features/widgets/widget_feature.html","","<p>Feature: Widget\n\n<pre><code>Background:\n  Given the page /entries includes the following HTML:\n    &quot;&quot;&quot;\n    &lt;div&gt;\n ...</code></pre>\n"]]}}